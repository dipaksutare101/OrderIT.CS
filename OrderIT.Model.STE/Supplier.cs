//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace OrderIT.Model.STE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Product))]
    public partial class Supplier : Company, IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string IBAN
        {
            get { return _iBAN; }
            set
            {
                if (_iBAN != value)
                {
                    _iBAN = value;
                    OnPropertyChanged("IBAN");
                }
            }
        }
        private string _iBAN;
    
        [DataMember]
        public Nullable<short> PaymentDays
        {
            get { return _paymentDays; }
            set
            {
                if (_paymentDays != value)
                {
                    _paymentDays = value;
                    OnPropertyChanged("PaymentDays");
                }
            }
        }
        private Nullable<short> _paymentDays;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Product> Products
        {
            get
            {
                if (_products == null)
                {
                    _products = new TrackableCollection<Product>();
                    _products.CollectionChanged += FixupProducts;
                }
                return _products;
            }
            set
            {
                if (!ReferenceEquals(_products, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_products != null)
                    {
                        _products.CollectionChanged -= FixupProducts;
                    }
                    _products = value;
                    if (_products != null)
                    {
                        _products.CollectionChanged += FixupProducts;
                    }
                    OnNavigationPropertyChanged("Products");
                }
            }
        }
        private TrackableCollection<Product> _products;

        #endregion
        #region ChangeTracking
    
        protected override void ClearNavigationProperties()
        {
            base.ClearNavigationProperties();
            Products.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupProducts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Product item in e.NewItems)
                {
                    if (!item.Suppliers.Contains(this))
                    {
                        item.Suppliers.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Products", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Product item in e.OldItems)
                {
                    if (item.Suppliers.Contains(this))
                    {
                        item.Suppliers.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Products", item);
                    }
                }
            }
        }

        #endregion
    }
}
