//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace OrderIT.Model.STE
{
		[DataContract(IsReference = true, Namespace = "http://schema.tempuri.org/STECustomer")]
    public partial class Customer : Company, IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        //[DataMember]
        public string WSUserName
        {
            get { return _wSUserName; }
            set
            {
                if (_wSUserName != value)
                {
                    _wSUserName = value;
                    OnPropertyChanged("WSUserName");
                }
            }
        }
        private string _wSUserName;
    
        //[DataMember]
        public string WSPassword
        {
            get { return _wSPassword; }
            set
            {
                if (_wSPassword != value)
                {
                    _wSPassword = value;
                    OnPropertyChanged("WSPassword");
                }
            }
        }
        private string _wSPassword;
    
        //[DataMember]
        public Nullable<bool> WSEnabled
        {
            get { return _wSEnabled; }
            set
            {
                if (_wSEnabled != value)
                {
                    _wSEnabled = value;
                    OnPropertyChanged("WSEnabled");
                }
            }
        }
        private Nullable<bool> _wSEnabled;

        #endregion
        #region Complex Properties
    
        [DataMember]
        public AddressInfo BillingAddress
        {
            get
            {
                if (!_billingAddressInitialized && _billingAddress == null)
                {
                    _billingAddress = new AddressInfo();
                    ((INotifyComplexPropertyChanging)_billingAddress).ComplexPropertyChanging += HandleBillingAddressChanging;
                }
                _billingAddressInitialized = true;
                return _billingAddress;
            }
            set
            {
                _billingAddressInitialized = true;
                if (!Equals(_billingAddress, value))
                {
                    if (_billingAddress != null)
                    {
                        ((INotifyComplexPropertyChanging)_billingAddress).ComplexPropertyChanging -= HandleBillingAddressChanging;
                    }
    
                    HandleBillingAddressChanging(this, null);
                    _billingAddress = value;
                    OnPropertyChanged("BillingAddress");
    
                    if (value != null)
                    {
                        ((INotifyComplexPropertyChanging)_billingAddress).ComplexPropertyChanging += HandleBillingAddressChanging;
                    }
                }
            }
        }
        private AddressInfo _billingAddress;
        private bool _billingAddressInitialized;
    
        [DataMember]
        public AddressInfo ShippingAddress
        {
            get
            {
                if (!_shippingAddressInitialized && _shippingAddress == null)
                {
                    _shippingAddress = new AddressInfo();
                    ((INotifyComplexPropertyChanging)_shippingAddress).ComplexPropertyChanging += HandleShippingAddressChanging;
                }
                _shippingAddressInitialized = true;
                return _shippingAddress;
            }
            set
            {
                _shippingAddressInitialized = true;
                if (!Equals(_shippingAddress, value))
                {
                    if (_shippingAddress != null)
                    {
                        ((INotifyComplexPropertyChanging)_shippingAddress).ComplexPropertyChanging -= HandleShippingAddressChanging;
                    }
    
                    HandleShippingAddressChanging(this, null);
                    _shippingAddress = value;
                    OnPropertyChanged("ShippingAddress");
    
                    if (value != null)
                    {
                        ((INotifyComplexPropertyChanging)_shippingAddress).ComplexPropertyChanging += HandleShippingAddressChanging;
                    }
                }
            }
        }
        private AddressInfo _shippingAddress;
        private bool _shippingAddressInitialized;

        #endregion
        #region ChangeTracking
        // Records the original values for the complex property BillingAddress
        private void HandleBillingAddressChanging(object sender, EventArgs args)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
        }
    
        // Records the original values for the complex property ShippingAddress
        private void HandleShippingAddressChanging(object sender, EventArgs args)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
        }
    
    
        protected override void ClearNavigationProperties()
        {
            base.ClearNavigationProperties();
        }

        #endregion
    }
}
