//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Objects.DataClasses;
using System.Collections.Generic;
namespace OrderIT.Model
{
    public partial class OrderITEntities : ObjectContext
    {
        public const string ConnectionString = "name=OrderITEntities";
        public const string ContainerName = "OrderITEntities";
    
        #region Constructors
    
        public OrderITEntities()
            : base(ConnectionString, ContainerName)
        {
            //ContextOptions.LazyLoadingEnabled = true;
            CreateObjectSet<Company>().ToTraceString();
        }
    
        public OrderITEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            //ContextOptions.LazyLoadingEnabled = true;
            CreateObjectSet<Company>().ToTraceString();
        }
    
        public OrderITEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            //ContextOptions.LazyLoadingEnabled = true;
            CreateObjectSet<Company>().ToTraceString();
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public virtual ObjectSet<Company> Companies
        {
            get { return _companies  ?? (_companies = CreateObjectSet<Company>("Companies")); }
        }
    
        private ObjectSet<Company> _companies;
    
        public virtual ObjectSet<Order> Orders
        {
            get { return _orders  ?? (_orders = CreateObjectSet<Order>("Orders")); }
        }
    
        private ObjectSet<Order> _orders;
    
        public virtual ObjectSet<OrderDetail> OrderDetails
        {
            get { return _orderDetails  ?? (_orderDetails = CreateObjectSet<OrderDetail>("OrderDetails")); }
        }
    
        private ObjectSet<OrderDetail> _orderDetails;
    
        public virtual ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
    
        private ObjectSet<Product> _products;

        #endregion
        #region Function Imports
        		public virtual ObjectResult<OrderDetail> GetOrderDetails(Nullable<int> orderid){
    			
    				ObjectParameter orderidParameter;
    		
    				if (orderid.HasValue)
    				{
    					orderidParameter = new ObjectParameter("orderid", orderid);
    				}
    				else
    				{
    					orderidParameter = new ObjectParameter("orderid", typeof(int));
    				}
            		return base.ExecuteFunction<OrderDetail>("GetOrderDetails", orderidParameter);
    			    }
        			public virtual int GetTopOrders() {
    			        		return base.ExecuteFunction("GetTopOrders");
    			    }
        		public virtual ObjectResult<Nullable<decimal>> GetTotalOrdersAmount(){
    			        		return base.ExecuteFunction<Nullable<decimal>>("GetTotalOrdersAmount");
    			    }
        		public virtual ObjectResult<Company> GetCompanies(){
    			        		return base.ExecuteFunction<Company>("GetCompanies");
    			    }
        		public virtual ObjectResult<OrderDetail> GetPagedDetails(Nullable<int> pageIndex, Nullable<int> rowsPerPage, ObjectParameter count){
    			
    				ObjectParameter pageIndexParameter;
    		
    				if (pageIndex.HasValue)
    				{
    					pageIndexParameter = new ObjectParameter("pageIndex", pageIndex);
    				}
    				else
    				{
    					pageIndexParameter = new ObjectParameter("pageIndex", typeof(int));
    				}
    
    				ObjectParameter rowsPerPageParameter;
    		
    				if (rowsPerPage.HasValue)
    				{
    					rowsPerPageParameter = new ObjectParameter("rowsPerPage", rowsPerPage);
    				}
    				else
    				{
    					rowsPerPageParameter = new ObjectParameter("rowsPerPage", typeof(int));
    				}
            		return base.ExecuteFunction<OrderDetail>("GetPagedDetails", pageIndexParameter, rowsPerPageParameter, count);
    			    }
        		public virtual ObjectResult<OrderDetail> GetCustomersForTest(string name){
    			
    				ObjectParameter nameParameter;
    		
    				if (name != null)
    				{
    					nameParameter = new ObjectParameter("name", name);
    				}
    				else
    				{
    					nameParameter = new ObjectParameter("name", typeof(string));
    				}
            		return base.ExecuteFunction<OrderDetail>("GetCustomersForTest", nameParameter);
    			    }

        #endregion
    
      [EdmFunction("OrderITModel.Store", "GetTotalAmount")]
      public static Nullable<decimal> GetTotalAmount(Nullable<decimal> unitprice, Nullable<int> quantity, Nullable<decimal> discount) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFTotalAmount")]
      public static Nullable<decimal> GetUDFTotalAmount(Nullable<decimal> unitPrice) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFTotalAmount")]
      public static Nullable<decimal> GetUDFTotalAmount(Nullable<decimal> unitPrice, Nullable<int> quantity, Nullable<decimal> discount) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFTotalAmountWithObjectParameter")]
      public static Nullable<decimal> GetUDFTotalAmountWithObjectParameter(OrderDetail detail) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFAddresses")]
      public static DbDataRecord GetUDFAddresses(Customer detail) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFTypedAddresses")]
      public static CustomerProjection GetUDFTypedAddresses(Customer customer) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFDetailsWithNoDiscount_Scalar")]
      public static IEnumerable<Nullable<int>> GetUDFDetailsWithNoDiscount_Scalar(Order o) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFDetailsWithNoDiscount_Record")]
      public static IEnumerable<DbDataRecord> GetUDFDetailsWithNoDiscount_Record(Order o) { 
    		throw new NotImplementedException("CannotCall this method");
    }
      [EdmFunction("OrderITModel", "GetUDFDetailsWithNoDiscount_Object")]
      public static IEnumerable<OrderDetail> GetUDFDetailsWithNoDiscount_Object(Order o) { 
    		throw new NotImplementedException("CannotCall this method");
    }}
}
